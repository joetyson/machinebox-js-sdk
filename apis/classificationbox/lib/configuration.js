"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Configuration = void 0;

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

// tslint:disable

/**
 * !!GENERATED FILE!!
 *
 * WARNING:  Do not edit this file, changes will be overwritten.
 *
 * Classificationbox
 * ClassificationBox API descriptors (unofficial)
 *
 * @mbx/api-classificationbox v1.0.0
 */
var Configuration =
/**
 * parameter for apiKey security
 * @param name security name
 * @memberof Configuration
 */

/**
 * parameter for basic security
 *
 * @type {string}
 * @memberof Configuration
 */

/**
 * parameter for basic security
 *
 * @type {string}
 * @memberof Configuration
 */

/**
 * parameter for oauth2 security
 * @param name security name
 * @param scopes oauth2 scope
 * @memberof Configuration
 */

/**
 * override base path
 *
 * @type {string}
 * @memberof Configuration
 */

/**
 * base options for axios calls
 *
 * @type {any}
 * @memberof Configuration
 */

/**
 * parameter for user agent header
 *
 * @type{string}
 * @memberof Configuration
 */
function Configuration() {
  var param = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  _classCallCheck(this, Configuration);

  _defineProperty(this, "apiKey", void 0);

  _defineProperty(this, "username", void 0);

  _defineProperty(this, "password", void 0);

  _defineProperty(this, "accessToken", void 0);

  _defineProperty(this, "basePath", void 0);

  _defineProperty(this, "baseOptions", void 0);

  _defineProperty(this, "userAgent", void 0);

  this.apiKey = param.apiKey;
  this.username = param.username;
  this.password = param.password;
  this.accessToken = param.accessToken;
  this.basePath = param.basePath;
  this.userAgent = param.userAgent;
};

exports.Configuration = Configuration;